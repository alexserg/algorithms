а) Во взвешенном неориентированном графе G = (V, E, w), поиск в ширину из вершины s находит кратчайшие пути до каждой
    вершины из s за время O(V + E).
	
	Ответ: Правда
	
	Объяснение: Граф G=(V,E), где множество ребер E представлено списком смежности.
	В очередь добавляются только непосещенные вершины, поэтому каждая вершина посещается не более одного раза.
	Операции внесения в очередь и удаления из нее требуют O(1) времени, так что общее время работы с очередью составляет O(|V|) операций.
	Для каждой вершины v рассматривается не более deg(v) ребер, принадлежащих ей.
	Так как ?deg(v)=2|E|, по лемме о рукопожатиях, то время, используемое на работу с ребрами, составляет O(|E|).
	Поэтому общее время работы алгоритма поиска в ширину — O(|V|+|E|).
	
 б) Во взвешенном неориентированном дереве G = (V, E, w), поиск в ширину из вершины s находит кратчайшие пути до каждой
    вершины из s за время O(V + E).
	
	Ответ: Правда
	
	Объяснение: Дерево это ацикличный граф, так что аналогично как в а
	
 в) Во взвешенном неориентированном дереве G = (V, E, w), поиск в глубину из вершины s находит кратчайшие пути до каждой
    вершины из s за время O(V + E).
	
	Ответ: Ложь
	
	Объяснение: В принципе не находит кратчайшие пути, тк служит не для этого
	
 г) В графе, представляющем задания и их связи ((а, б) значит, что а должно произойти перед б), поиск в ширину находит
    задания в правильном порядке их выполнения
	
	Ответ: Ложь
	
	Объяснение: Г.bmp, a->b1->c1->c2, a->b1->b2
	
 д) Алгоритм Дейкстры для нахождения кратчайшего пути может "облегчить/расслабить" более чем одну вершину в графе с циклами
 	
	Ответ: Правда
	
	Объяснение: Может например при 2 х циклах в графе
	
 е) Во взвешенном ориентированном графе G = (V, E, w) с истоком s ? V, если G имеет цикл с отрицательным весом, алгоритм
    Беллмана-Форда обязательно вычислит неверный результат для ?(s, v).
		
	Ответ: Ложь
	
	Объяснение: Цикл с отрицательным весом может быть недостижим.?еще что то?
	
 ж) Во взвешенном ориентированном графе G = (V, E, w) не содержащем нулевых и положительных циклов, Беллман-Форд может найти
    самый длинный (максимальный по весу) путь из вершины s в вершину t.
		
	Ответ: Верно
	
	Объяснение: инверсируем все веса, находим кратчайший путь, для отрицательных это будет максимальный
	
 з) Во взвешенном ориентированном графе G = (V, E, w) содержащем цикл с отрицательным весом, Беллман-Форд найдет кратчайший
    путь из вершины s в вершину t, не содержащий циклов.
		
	Ответ: Правда

	
 и) Имея на входе взвешенный ориентированный граф G = (V, E, w) и кратчайший путь p из s в t, если мы удвоим вес каждого ребра
    чтобы получился граф G0 = (V, E, w0), то путь p будет также кратчайшим путем в G0
		
	Ответ: Ложь
	
	Объяснение: Если есть отрицательные ребра, то неверно
	
 к) Полиномиальное - хорошо. Экспоненциальное - плохо
 	
	Ответ: Правда
	
	Объяснение: Очевидно, можно взять отношение x^n/exp(x) и взять предел x -> бесконечности из которого видно, что x^n - хорошо, exp(x) - плохо
	
 л) Любое несбалансированное дерево из n элементов можно сбалансировать при помощи O(log n) поворотов
 	
	Ответ: Ложь
	
	Объяснение: Нет, можно придумать случай для O(n), например что то похожее на линию 0--0--0--0--0--0--0--0--0--0--0
	
 м) Если в AVL дереве мы будем хранить в каждой вершине размер поддерева, то мы сможем для двух ключей x и y найти
    количество ключей, находящихся между x и y
		
	Ответ: Ложь
	
	Объяснение: Пример дерева в рисунке М.bmp. У нас есть 3 ключа x y1 и y2 которые согласно условию имеют одинаковые ключи и размерфы поддерева , но расстояния разные
	
 н) Для динамического программирования вычисление при помощи восходящего подхода асимптотически быстрее, чем вычисление при
    помощи рекурсии и мемоизации
		
	Ответ: Правда
	
 о) Время работы алгоритма динамического программирования всегда O(P) где P - количество подзадач
 	
	Ответ: Правда
	
 п) Если рекуррентное соотношение имеет циклическую зависимость, такое рекуррентное соотношение невозможно использовать
    для решения задачи динамического программирования
		
	Ответ: Правда
	
 р) Любая задача в NP может быть решена за экспоненциальное время
 	
	Ответ: Правда
	
	Объяснение: Может за экспоненциальное, но так же и за полиноминальное
	
 с) Если задача X может быть сведена к известной NP-сложной проблеме, то X должна быть также NP-сложной
 	
	Ответ: Правда
	
	Объяснение: Если  х - сводится к np сложной проблеме, то x должна быть NP-сложной. ТК по определению NP-сложная проблема означает, что полиноминальный алгоритм не найден.
	
 т) Если P == NP, то NP == NP-полная
 	
	Ответ: Правда